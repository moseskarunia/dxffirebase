"use strict";

var _write = _interopRequireDefault(require("./write"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

test('write', function () {
  expect((0, _write.default)([0, 0, 0, 0])).toEqual(0x0);
  expect((0, _write.default)([0, 0, 0, 1])).toEqual(0x1);
  expect((0, _write.default)([0, 0, 1, 0])).toEqual(0x2);
  expect((0, _write.default)([0, 0, 1, 1])).toEqual(0x3);
  expect((0, _write.default)([0, 1, 0, 0])).toEqual(0x4);
  expect((0, _write.default)([0, 1, 0, 1])).toEqual(0x5);
  expect((0, _write.default)([0, 1, 1, 0])).toEqual(0x6);
  expect((0, _write.default)([0, 1, 1, 1])).toEqual(0x7);
  expect((0, _write.default)([1, 0, 0, 0])).toEqual(0x8);
  expect((0, _write.default)([1, 0, 0, 1])).toEqual(0x9);
  expect((0, _write.default)([1, 0, 1, 0])).toEqual(0xa);
  expect((0, _write.default)([1, 0, 1, 1])).toEqual(0xb);
  expect((0, _write.default)([1, 1, 0, 0])).toEqual(0xc);
  expect((0, _write.default)([1, 1, 0, 1])).toEqual(0xd);
  expect((0, _write.default)([1, 1, 1, 0])).toEqual(0xe);
  expect((0, _write.default)([1, 1, 1, 1])).toEqual(0xf);
});
test('throw when the array is invalid', function () {
  expect(function () {
    return (0, _write.default)([1, 0, 1, 0, 1]);
  }).toThrow();
  expect(function () {
    return (0, _write.default)([1, 0, 1]);
  }).toThrow();
  expect(function () {
    return (0, _write.default)([]);
  }).toThrow();
  expect(function () {
    return (0, _write.default)('1010');
  }).toThrow();
  expect(function () {
    return (0, _write.default)();
  }).toThrow();
});